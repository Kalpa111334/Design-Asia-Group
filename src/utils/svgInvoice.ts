type TaskRow = {
  id: string;
  title: string;
  status: string;
  priority: string;
  created_at: string;
  due_date?: string | null;
  completed_at?: string | null;
};

function esc(text: string) {
  return (text || '')
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;');
}

export function downloadTasksInvoiceSvg(filename: string, rows: TaskRow[], opts?: { title?: string; subtitle?: string }) {
  if (!rows || rows.length === 0) return;

  const title = opts?.title || 'Weekly Task Invoice';
  const subtitle = opts?.subtitle || new Date().toLocaleString();

  const cols = [
    { key: 'id', label: 'ID', x: 24, width: 120 },
    { key: 'title', label: 'Title', x: 150, width: 320 },
    { key: 'status', label: 'Status', x: 480, width: 110 },
    { key: 'priority', label: 'Priority', x: 600, width: 90 },
    { key: 'created_at', label: 'Created', x: 700, width: 150 },
    { key: 'due_date', label: 'Due', x: 860, width: 150 },
  ] as const;

  const rowHeight = 24;
  const headerHeight = 140;
  const footerHeight = 60;
  const bodyHeight = rows.length * rowHeight;
  const width = 1024;
  const height = headerHeight + bodyHeight + footerHeight;

  const header = `
    <rect x="0" y="0" width="${width}" height="110" fill="#0F172A" />
    <text x="24" y="48" font-size="26" font-weight="700" fill="#FFFFFF">TaskVision</text>
    <text x="24" y="80" font-size="16" fill="#CBD5E1">${esc(title)}</text>
    <text x="24" y="102" font-size="12" fill="#94A3B8">${esc(subtitle)}</text>
  `;

  const tableHeaderY = headerHeight - 16;
  const tableHeader = `
    <rect x="0" y="${tableHeaderY}" width="${width}" height="32" fill="#F8FAFC" />
    ${cols
      .map(
        (c) => `
      <text x="${c.x}" y="${tableHeaderY + 22}" font-size="12" font-weight="600" fill="#0F172A">${esc(
          c.label
        )}</text>`
      )
      .join('')}
  `;

  const body = rows
    .map((r, i) => {
      const y = headerHeight + i * rowHeight;
      const bg = i % 2 === 0 ? '#FFFFFF' : '#F8FAFC';
      const cells = [
        esc(r.id.slice(0, 8)),
        esc(r.title.length > 36 ? r.title.slice(0, 33) + '…' : r.title),
        esc(r.status.replace('_', ' ')),
        esc(r.priority),
        esc(r.created_at),
        esc(r.due_date ? r.due_date : ''),
      ];
      return `
        <rect x="0" y="${y}" width="${width}" height="${rowHeight}" fill="${bg}" />
        <text x="${cols[0].x}" y="${y + 16}" font-size="12" fill="#0F172A">${cells[0]}</text>
        <text x="${cols[1].x}" y="${y + 16}" font-size="12" fill="#0F172A">${cells[1]}</text>
        <text x="${cols[2].x}" y="${y + 16}" font-size="12" fill="#0F172A">${cells[2]}</text>
        <text x="${cols[3].x}" y="${y + 16}" font-size="12" fill="#0F172A">${cells[3]}</text>
        <text x="${cols[4].x}" y="${y + 16}" font-size="12" fill="#0F172A">${cells[4]}</text>
        <text x="${cols[5].x}" y="${y + 16}" font-size="12" fill="#0F172A">${cells[5]}</text>
      `;
    })
    .join('');

  const footer = `
    <rect x="0" y="${height - footerHeight}" width="${width}" height="${footerHeight}" fill="#FFFFFF" />
    <text x="24" y="${height - 24}" font-size="12" fill="#64748B">Generated by TaskVision • ${esc(
      new Date().toLocaleString()
    )}</text>
  `;

  const svg = `<?xml version="1.0" encoding="UTF-8"?>
  <svg xmlns="http://www.w3.org/2000/svg" width="${width}" height="${height}" viewBox="0 0 ${width} ${height}">
    <rect x="0" y="0" width="${width}" height="${height}" fill="#FFFFFF" />
    ${header}
    ${tableHeader}
    ${body}
    ${footer}
  </svg>`;

  const blob = new Blob([svg], { type: 'image/svg+xml;charset=utf-8' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = filename.endsWith('.svg') ? filename : `${filename}.svg`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}


